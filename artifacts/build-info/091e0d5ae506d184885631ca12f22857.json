{
	"id": "091e0d5ae506d184885631ca12f22857",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"IDO.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n *  @dev Contract module which provides a basic access control mechanism, where\r\n *  there is an account (an owner) that can be granted exclusive access to\r\n *  specific functions.\r\n *\r\n *  By default, the owner account will be the one that deploys the contract. This\r\n *  can later be changed with {transferOwnership}.\r\n *\r\n *  This module is used through inheritance. It will make available the modifier\r\n *  `onlyOwner`, which can be applied to your functions to restrict their use to\r\n *  the owner.\r\n */\r\n\r\nabstract contract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    /**\r\n    * @dev Initializes the contract setting the deployer as the initial owner.\r\n    */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the address of the current owner.\r\n    */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Leaves the contract without owner. It will not be possible to call\r\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n    *\r\n    * NOTE: Renouncing ownership will leave the contract without an owner,\r\n    * thereby removing any functionality that is only available to the owner.\r\n    */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n    * Can only be called by the current owner.\r\n    */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n/**\r\n *  @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n    * @dev Returns the name of the token.\r\n    */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n    * @dev Returns the symbol of the token.\r\n    */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n    * @dev Returns the decimals places of the token.\r\n    */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n    * @dev Returns the amount of tokens in existence.\r\n    */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n    * @dev Returns the amount of tokens owned by `account`.\r\n    */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n    * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n    *\r\n    * Returns a boolean value indicating whether the operation succeeded.\r\n    *\r\n    * Emits a {Transfer} event.\r\n    */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n    * @dev Returns the remaining number of tokens that `spender` will be\r\n    * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n    * zero by default.\r\n    *\r\n    * This value changes when {approve} or {transferFrom} are called.\r\n    */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n    * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n    *\r\n    * Returns a boolean value indicating whether the operation succeeded.\r\n    *\r\n    * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n    * that someone may use both the old and the new allowance by unfortunate\r\n    * transaction ordering. One possible solution to mitigate this race\r\n    * condition is to first reduce the spender's allowance to 0 and set the\r\n    * desired value afterwards:\r\n    * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    *\r\n    * Emits an {Approval} event.\r\n    */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n    * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n    * allowance mechanism. `amount` is then deducted from the caller's\r\n    * allowance.\r\n    *\r\n    * Returns a boolean value indicating whether the operation succeeded.\r\n    *\r\n    * Emits a {Transfer} event.\r\n    */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n    * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n    * another (`to`).\r\n    *\r\n    * Note that `value` may be zero.\r\n    */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n    * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n    * a call to {approve}. `value` is the new allowance.\r\n    */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract IDO is Ownable {\r\n    address public token;           //ERC token address\r\n    uint256 public tokenDecimal;    //Decimal for computation\r\n\r\n    uint256 public startTime;       //Epoch timestamps when sale will start and end\r\n    uint256 public endTime;\r\n\r\n    uint256 public tokenRate;       //Will hold the price of our token\r\n\r\n    uint256 public soldAmount;      //How much of the token has been sold\r\n    uint256 public totalRaise;      //How much total ETH is raised from the sale\r\n    uint256 public totalRewardTokens;   //How many of the tokens are up for sale\r\n\r\n    constructor (address _token, uint256 _startTime, uint256 _endTime, uint256 _tokenRate, uint256 _totalRewardTokens){\r\n        \r\n    }\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IDO.sol": {
				"IDO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalRewardTokens",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "soldAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenDecimal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRaise",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"IDO.sol\":5428:6153  contract IDO is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"IDO.sol\":6012:6144  constructor (address _token, uint256 _startTime, uint256 _endTime, uint256 _tokenRate, uint256 _totalRewardTokens){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"IDO.sol\":981:998  address msgSender */\n  0x00\n    /* \"IDO.sol\":1001:1013  _msgSender() */\n  tag_7\n    /* \"IDO.sol\":1001:1011  _msgSender */\n  shl(0x20, tag_8)\n    /* \"IDO.sol\":1001:1013  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"IDO.sol\":981:1013  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"IDO.sol\":1033:1042  msgSender */\n  dup1\n    /* \"IDO.sol\":1024:1030  _owner */\n  0x00\n  dup1\n    /* \"IDO.sol\":1024:1042  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"IDO.sol\":1091:1100  msgSender */\n  dup1\n    /* \"IDO.sol\":1058:1101  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"IDO.sol\":1087:1088  0 */\n  0x00\n    /* \"IDO.sol\":1058:1101  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"IDO.sol\":955:1109  constructor () {\r... */\n  pop\n    /* \"IDO.sol\":6012:6144  constructor (address _token, uint256 _startTime, uint256 _endTime, uint256 _tokenRate, uint256 _totalRewardTokens){\r... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"IDO.sol\":5428:6153  contract IDO is Ownable {\r... */\n  jump(tag_10)\n    /* \"IDO.sol\":735:850  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_8:\n    /* \"IDO.sol\":788:803  address payable */\n  0x00\n    /* \"IDO.sol\":831:841  msg.sender */\n  caller\n    /* \"IDO.sol\":816:842  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"IDO.sol\":735:850  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_13:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_15\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_17:\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_19\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1215   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":492:495   */\n  0xa0\n    /* \"#utility.yul\":480:489   */\n  dup7\n    /* \"#utility.yul\":471:478   */\n  dup9\n    /* \"#utility.yul\":467:490   */\n  sub\n    /* \"#utility.yul\":463:496   */\n  slt\n    /* \"#utility.yul\":460:462   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":509:510   */\n  0x00\n    /* \"#utility.yul\":506:507   */\n  dup1\n    /* \"#utility.yul\":499:511   */\n  revert\n    /* \"#utility.yul\":460:462   */\ntag_22:\n    /* \"#utility.yul\":552:553   */\n  0x00\n    /* \"#utility.yul\":577:641   */\n  tag_23\n    /* \"#utility.yul\":633:640   */\n  dup9\n    /* \"#utility.yul\":624:630   */\n  dup3\n    /* \"#utility.yul\":613:622   */\n  dup10\n    /* \"#utility.yul\":609:631   */\n  add\n    /* \"#utility.yul\":577:641   */\n  tag_13\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":567:641   */\n  swap6\n  pop\n    /* \"#utility.yul\":523:651   */\n  pop\n    /* \"#utility.yul\":690:692   */\n  0x20\n    /* \"#utility.yul\":716:780   */\n  tag_24\n    /* \"#utility.yul\":772:779   */\n  dup9\n    /* \"#utility.yul\":763:769   */\n  dup3\n    /* \"#utility.yul\":752:761   */\n  dup10\n    /* \"#utility.yul\":748:770   */\n  add\n    /* \"#utility.yul\":716:780   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":706:780   */\n  swap5\n  pop\n    /* \"#utility.yul\":661:790   */\n  pop\n    /* \"#utility.yul\":829:831   */\n  0x40\n    /* \"#utility.yul\":855:919   */\n  tag_25\n    /* \"#utility.yul\":911:918   */\n  dup9\n    /* \"#utility.yul\":902:908   */\n  dup3\n    /* \"#utility.yul\":891:900   */\n  dup10\n    /* \"#utility.yul\":887:909   */\n  add\n    /* \"#utility.yul\":855:919   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":845:919   */\n  swap4\n  pop\n    /* \"#utility.yul\":800:929   */\n  pop\n    /* \"#utility.yul\":968:970   */\n  0x60\n    /* \"#utility.yul\":994:1058   */\n  tag_26\n    /* \"#utility.yul\":1050:1057   */\n  dup9\n    /* \"#utility.yul\":1041:1047   */\n  dup3\n    /* \"#utility.yul\":1030:1039   */\n  dup10\n    /* \"#utility.yul\":1026:1048   */\n  add\n    /* \"#utility.yul\":994:1058   */\n  tag_17\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":984:1058   */\n  swap3\n  pop\n    /* \"#utility.yul\":939:1068   */\n  pop\n    /* \"#utility.yul\":1107:1110   */\n  0x80\n    /* \"#utility.yul\":1134:1198   */\n  tag_27\n    /* \"#utility.yul\":1190:1197   */\n  dup9\n    /* \"#utility.yul\":1181:1187   */\n  dup3\n    /* \"#utility.yul\":1170:1179   */\n  dup10\n    /* \"#utility.yul\":1166:1188   */\n  add\n    /* \"#utility.yul\":1134:1198   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":1124:1198   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1208   */\n  pop\n    /* \"#utility.yul\":450:1215   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1221:1317   */\ntag_28:\n  0x00\n    /* \"#utility.yul\":1287:1311   */\n  tag_30\n    /* \"#utility.yul\":1305:1310   */\n  dup3\n    /* \"#utility.yul\":1287:1311   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1276:1311   */\n  swap1\n  pop\n    /* \"#utility.yul\":1266:1317   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1323:1449   */\ntag_31:\n  0x00\n    /* \"#utility.yul\":1400:1442   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1393:1398   */\n  dup3\n    /* \"#utility.yul\":1389:1443   */\n  and\n    /* \"#utility.yul\":1378:1443   */\n  swap1\n  pop\n    /* \"#utility.yul\":1368:1449   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1455:1532   */\ntag_33:\n  0x00\n    /* \"#utility.yul\":1521:1526   */\n  dup2\n    /* \"#utility.yul\":1510:1526   */\n  swap1\n  pop\n    /* \"#utility.yul\":1500:1532   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1538:1660   */\ntag_16:\n    /* \"#utility.yul\":1611:1635   */\n  tag_36\n    /* \"#utility.yul\":1629:1634   */\n  dup2\n    /* \"#utility.yul\":1611:1635   */\n  tag_28\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1604:1609   */\n  dup2\n    /* \"#utility.yul\":1601:1636   */\n  eq\n    /* \"#utility.yul\":1591:1593   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1650:1651   */\n  0x00\n    /* \"#utility.yul\":1647:1648   */\n  dup1\n    /* \"#utility.yul\":1640:1652   */\n  revert\n    /* \"#utility.yul\":1591:1593   */\ntag_37:\n    /* \"#utility.yul\":1581:1660   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1666:1788   */\ntag_20:\n    /* \"#utility.yul\":1739:1763   */\n  tag_39\n    /* \"#utility.yul\":1757:1762   */\n  dup2\n    /* \"#utility.yul\":1739:1763   */\n  tag_33\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1732:1737   */\n  dup2\n    /* \"#utility.yul\":1729:1764   */\n  eq\n    /* \"#utility.yul\":1719:1721   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1778:1779   */\n  0x00\n    /* \"#utility.yul\":1775:1776   */\n  dup1\n    /* \"#utility.yul\":1768:1780   */\n  revert\n    /* \"#utility.yul\":1719:1721   */\ntag_40:\n    /* \"#utility.yul\":1709:1788   */\n  pop\n  jump\t// out\n    /* \"IDO.sol\":5428:6153  contract IDO is Ownable {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"IDO.sol\":5428:6153  contract IDO is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfa1a5f59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x1b0875a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x31711884\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3197cbb6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3996dc8f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5caed029\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"IDO.sol\":5928:5960  uint256 public totalRewardTokens */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":5697:5721  uint256 public tokenRate */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":5666:5688  uint256 public endTime */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":5846:5871  uint256 public totalRaise */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":5516:5543  uint256 public tokenDecimal */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":1831:1979  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"IDO.sol\":5581:5605  uint256 public startTime */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":1188:1275  function owner() public view virtual returns (address) {\r... */\n    tag_10:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":2131:2375  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"IDO.sol\":5771:5796  uint256 public soldAmount */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":5459:5479  address public token */\n    tag_13:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"IDO.sol\":5928:5960  uint256 public totalRewardTokens */\n    tag_16:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":5697:5721  uint256 public tokenRate */\n    tag_20:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":5666:5688  uint256 public endTime */\n    tag_23:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":5846:5871  uint256 public totalRaise */\n    tag_26:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":5516:5543  uint256 public tokenDecimal */\n    tag_29:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":1831:1979  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_32:\n        /* \"IDO.sol\":1417:1429  _msgSender() */\n      tag_51\n        /* \"IDO.sol\":1417:1427  _msgSender */\n      tag_52\n        /* \"IDO.sol\":1417:1429  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"IDO.sol\":1406:1429  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":1406:1413  owner() */\n      tag_53\n        /* \"IDO.sol\":1406:1411  owner */\n      tag_37\n        /* \"IDO.sol\":1406:1413  owner() */\n      jump\t// in\n    tag_53:\n        /* \"IDO.sol\":1406:1429  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"IDO.sol\":1398:1466  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"IDO.sol\":1938:1939  0 */\n      0x00\n        /* \"IDO.sol\":1901:1941  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":1922:1928  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":1901:1941  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"IDO.sol\":1969:1970  0 */\n      0x00\n        /* \"IDO.sol\":1952:1958  _owner */\n      dup1\n      0x00\n        /* \"IDO.sol\":1952:1971  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"IDO.sol\":1831:1979  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"IDO.sol\":5581:5605  uint256 public startTime */\n    tag_34:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":1188:1275  function owner() public view virtual returns (address) {\r... */\n    tag_37:\n        /* \"IDO.sol\":1234:1241  address */\n      0x00\n        /* \"IDO.sol\":1261:1267  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":1254:1267  return _owner */\n      swap1\n      pop\n        /* \"IDO.sol\":1188:1275  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"IDO.sol\":2131:2375  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_43:\n        /* \"IDO.sol\":1417:1429  _msgSender() */\n      tag_60\n        /* \"IDO.sol\":1417:1427  _msgSender */\n      tag_52\n        /* \"IDO.sol\":1417:1429  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"IDO.sol\":1406:1429  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":1406:1413  owner() */\n      tag_61\n        /* \"IDO.sol\":1406:1411  owner */\n      tag_37\n        /* \"IDO.sol\":1406:1413  owner() */\n      jump\t// in\n    tag_61:\n        /* \"IDO.sol\":1406:1429  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"IDO.sol\":1398:1466  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"IDO.sol\":2240:2241  0 */\n      0x00\n        /* \"IDO.sol\":2220:2242  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":2220:2228  newOwner */\n      dup2\n        /* \"IDO.sol\":2220:2242  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"IDO.sol\":2212:2285  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"IDO.sol\":2330:2338  newOwner */\n      dup1\n        /* \"IDO.sol\":2301:2339  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":2322:2328  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"IDO.sol\":2301:2339  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"IDO.sol\":2359:2367  newOwner */\n      dup1\n        /* \"IDO.sol\":2350:2356  _owner */\n      0x00\n      dup1\n        /* \"IDO.sol\":2350:2367  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"IDO.sol\":2131:2375  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"IDO.sol\":5771:5796  uint256 public soldAmount */\n    tag_45:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":5459:5479  address public token */\n    tag_48:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"IDO.sol\":735:850  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_52:\n        /* \"IDO.sol\":788:803  address payable */\n      0x00\n        /* \"IDO.sol\":831:841  msg.sender */\n      caller\n        /* \"IDO.sol\":816:842  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"IDO.sol\":735:850  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_70:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_72\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_75:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_76\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_70\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:538   */\n    tag_77:\n        /* \"#utility.yul\":507:531   */\n      tag_79\n        /* \"#utility.yul\":525:530   */\n      dup2\n        /* \"#utility.yul\":507:531   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":502:505   */\n      dup3\n        /* \"#utility.yul\":495:532   */\n      mstore\n        /* \"#utility.yul\":485:538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":544:914   */\n    tag_81:\n      0x00\n        /* \"#utility.yul\":707:774   */\n      tag_83\n        /* \"#utility.yul\":771:773   */\n      0x26\n        /* \"#utility.yul\":766:769   */\n      dup4\n        /* \"#utility.yul\":707:774   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":700:774   */\n      swap2\n      pop\n        /* \"#utility.yul\":804:838   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":800:801   */\n      0x00\n        /* \"#utility.yul\":795:798   */\n      dup4\n        /* \"#utility.yul\":791:802   */\n      add\n        /* \"#utility.yul\":784:839   */\n      mstore\n        /* \"#utility.yul\":870:878   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":860:863   */\n      dup4\n        /* \"#utility.yul\":856:868   */\n      add\n        /* \"#utility.yul\":849:879   */\n      mstore\n        /* \"#utility.yul\":905:907   */\n      0x40\n        /* \"#utility.yul\":900:903   */\n      dup3\n        /* \"#utility.yul\":896:908   */\n      add\n        /* \"#utility.yul\":889:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1250   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":1083:1150   */\n      tag_87\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1142:1145   */\n      dup4\n        /* \"#utility.yul\":1083:1150   */\n      tag_84\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1076:1150   */\n      swap2\n      pop\n        /* \"#utility.yul\":1180:1214   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1176:1177   */\n      0x00\n        /* \"#utility.yul\":1171:1174   */\n      dup4\n        /* \"#utility.yul\":1167:1178   */\n      add\n        /* \"#utility.yul\":1160:1215   */\n      mstore\n        /* \"#utility.yul\":1241:1243   */\n      0x20\n        /* \"#utility.yul\":1236:1239   */\n      dup3\n        /* \"#utility.yul\":1232:1244   */\n      add\n        /* \"#utility.yul\":1225:1244   */\n      swap1\n      pop\n        /* \"#utility.yul\":1066:1250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1256:1374   */\n    tag_88:\n        /* \"#utility.yul\":1343:1367   */\n      tag_90\n        /* \"#utility.yul\":1361:1366   */\n      dup2\n        /* \"#utility.yul\":1343:1367   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1338:1341   */\n      dup3\n        /* \"#utility.yul\":1331:1368   */\n      mstore\n        /* \"#utility.yul\":1321:1374   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1380:1602   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":1511:1513   */\n      0x20\n        /* \"#utility.yul\":1500:1509   */\n      dup3\n        /* \"#utility.yul\":1496:1514   */\n      add\n        /* \"#utility.yul\":1488:1514   */\n      swap1\n      pop\n        /* \"#utility.yul\":1524:1595   */\n      tag_93\n        /* \"#utility.yul\":1592:1593   */\n      0x00\n        /* \"#utility.yul\":1581:1590   */\n      dup4\n        /* \"#utility.yul\":1577:1594   */\n      add\n        /* \"#utility.yul\":1568:1574   */\n      dup5\n        /* \"#utility.yul\":1524:1595   */\n      tag_77\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1478:1602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1608:2027   */\n    tag_67:\n      0x00\n        /* \"#utility.yul\":1812:1814   */\n      0x20\n        /* \"#utility.yul\":1801:1810   */\n      dup3\n        /* \"#utility.yul\":1797:1815   */\n      add\n        /* \"#utility.yul\":1789:1815   */\n      swap1\n      pop\n        /* \"#utility.yul\":1861:1870   */\n      dup2\n        /* \"#utility.yul\":1855:1859   */\n      dup2\n        /* \"#utility.yul\":1851:1871   */\n      sub\n        /* \"#utility.yul\":1847:1848   */\n      0x00\n        /* \"#utility.yul\":1836:1845   */\n      dup4\n        /* \"#utility.yul\":1832:1849   */\n      add\n        /* \"#utility.yul\":1825:1872   */\n      mstore\n        /* \"#utility.yul\":1889:2020   */\n      tag_95\n        /* \"#utility.yul\":2015:2019   */\n      dup2\n        /* \"#utility.yul\":1889:2020   */\n      tag_81\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1881:2020   */\n      swap1\n      pop\n        /* \"#utility.yul\":1779:2027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2033:2452   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":2237:2239   */\n      0x20\n        /* \"#utility.yul\":2226:2235   */\n      dup3\n        /* \"#utility.yul\":2222:2240   */\n      add\n        /* \"#utility.yul\":2214:2240   */\n      swap1\n      pop\n        /* \"#utility.yul\":2286:2295   */\n      dup2\n        /* \"#utility.yul\":2280:2284   */\n      dup2\n        /* \"#utility.yul\":2276:2296   */\n      sub\n        /* \"#utility.yul\":2272:2273   */\n      0x00\n        /* \"#utility.yul\":2261:2270   */\n      dup4\n        /* \"#utility.yul\":2257:2274   */\n      add\n        /* \"#utility.yul\":2250:2297   */\n      mstore\n        /* \"#utility.yul\":2314:2445   */\n      tag_97\n        /* \"#utility.yul\":2440:2444   */\n      dup2\n        /* \"#utility.yul\":2314:2445   */\n      tag_85\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2306:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2204:2452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2458:2680   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":2589:2591   */\n      0x20\n        /* \"#utility.yul\":2578:2587   */\n      dup3\n        /* \"#utility.yul\":2574:2592   */\n      add\n        /* \"#utility.yul\":2566:2592   */\n      swap1\n      pop\n        /* \"#utility.yul\":2602:2673   */\n      tag_99\n        /* \"#utility.yul\":2670:2671   */\n      0x00\n        /* \"#utility.yul\":2659:2668   */\n      dup4\n        /* \"#utility.yul\":2655:2672   */\n      add\n        /* \"#utility.yul\":2646:2652   */\n      dup5\n        /* \"#utility.yul\":2602:2673   */\n      tag_88\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2556:2680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:2855   */\n    tag_84:\n      0x00\n        /* \"#utility.yul\":2804:2810   */\n      dup3\n        /* \"#utility.yul\":2799:2802   */\n      dup3\n        /* \"#utility.yul\":2792:2811   */\n      mstore\n        /* \"#utility.yul\":2844:2848   */\n      0x20\n        /* \"#utility.yul\":2839:2842   */\n      dup3\n        /* \"#utility.yul\":2835:2849   */\n      add\n        /* \"#utility.yul\":2820:2849   */\n      swap1\n      pop\n        /* \"#utility.yul\":2782:2855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2957   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":2927:2951   */\n      tag_102\n        /* \"#utility.yul\":2945:2950   */\n      dup3\n        /* \"#utility.yul\":2927:2951   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2916:2951   */\n      swap1\n      pop\n        /* \"#utility.yul\":2906:2957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2963:3089   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":3040:3082   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3033:3038   */\n      dup3\n        /* \"#utility.yul\":3029:3083   */\n      and\n        /* \"#utility.yul\":3018:3083   */\n      swap1\n      pop\n        /* \"#utility.yul\":3008:3089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3095:3172   */\n    tag_91:\n      0x00\n        /* \"#utility.yul\":3161:3166   */\n      dup2\n        /* \"#utility.yul\":3150:3166   */\n      swap1\n      pop\n        /* \"#utility.yul\":3140:3172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3300   */\n    tag_73:\n        /* \"#utility.yul\":3251:3275   */\n      tag_107\n        /* \"#utility.yul\":3269:3274   */\n      dup2\n        /* \"#utility.yul\":3251:3275   */\n      tag_80\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3244:3249   */\n      dup2\n        /* \"#utility.yul\":3241:3276   */\n      eq\n        /* \"#utility.yul\":3231:3233   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":3290:3291   */\n      0x00\n        /* \"#utility.yul\":3287:3288   */\n      dup1\n        /* \"#utility.yul\":3280:3292   */\n      revert\n        /* \"#utility.yul\":3231:3233   */\n    tag_108:\n        /* \"#utility.yul\":3221:3300   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c31ac239153a0943822a834fa44a20b209f69649db1424c5471aab3ebdaeeef64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1791:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:1",
														"type": ""
													}
												],
												"src": "156:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "450:765:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "497:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "509:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "499:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "499:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "499:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "471:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "480:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "467:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "463:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:33:1"
															},
															"nodeType": "YulIf",
															"src": "460:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "523:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "538:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "542:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "567:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "613:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "624:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "609:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "609:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "633:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "577:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "567:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "661:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "676:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "680:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "706:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "752:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "763:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "748:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "748:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "772:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "716:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "716:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "706:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "800:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "815:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "829:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "819:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "845:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "891:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "902:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "887:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "887:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "911:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "855:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "845:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "939:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "954:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "958:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "984:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1030:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1041:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1026:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1026:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1050:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "994:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "994:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "984:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:17:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1124:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1170:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1181:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1166:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1166:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1190:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1134:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1124:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "388:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "399:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "411:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "419:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "427:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "435:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "443:6:1",
														"type": ""
													}
												],
												"src": "305:910:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1266:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1276:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1305:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1276:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1248:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"src": "1221:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1368:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1378:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1393:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1400:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1389:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1378:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1350:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1360:7:1",
														"type": ""
													}
												],
												"src": "1323:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1500:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1510:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1521:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1510:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1482:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1492:7:1",
														"type": ""
													}
												],
												"src": "1455:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1581:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1638:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1650:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1640:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1640:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1640:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1604:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1629:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1611:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1611:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1601:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:43:1"
															},
															"nodeType": "YulIf",
															"src": "1591:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1574:5:1",
														"type": ""
													}
												],
												"src": "1538:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1766:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1775:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1778:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1768:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1768:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1768:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1732:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1757:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1739:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1739:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1729:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1729:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:43:1"
															},
															"nodeType": "YulIf",
															"src": "1719:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1702:5:1",
														"type": ""
													}
												],
												"src": "1666:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516109643803806109648339818101604052810190610032919061011c565b60006100426100ea60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050505050506101fd565b600033905090565b600081519050610101816101cf565b92915050565b600081519050610116816101e6565b92915050565b600080600080600060a0868803121561013457600080fd5b6000610142888289016100f2565b955050602061015388828901610107565b945050604061016488828901610107565b935050606061017588828901610107565b925050608061018688828901610107565b9150509295509295909350565b600061019e826101a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101d881610193565b81146101e357600080fd5b50565b6101ef816101c5565b81146101fa57600080fd5b50565b6107588061020c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461014457806378e979251461014e5780638da5cb5b1461016c578063f2fde38b1461018a578063fa1a5f59146101a6578063fc0c546a146101c4576100a9565b80631b0875a6146100ae57806331711884146100cc5780633197cbb6146100ea5780633996dc8f146101085780635caed02914610126575b600080fd5b6100b66101e2565b6040516100c391906106a3565b60405180910390f35b6100d46101e8565b6040516100e191906106a3565b60405180910390f35b6100f26101ee565b6040516100ff91906106a3565b60405180910390f35b6101106101f4565b60405161011d91906106a3565b60405180910390f35b61012e6101fa565b60405161013b91906106a3565b60405180910390f35b61014c610200565b005b61015661033a565b60405161016391906106a3565b60405180910390f35b610174610340565b6040516101819190610648565b60405180910390f35b6101a4600480360381019061019f919061055b565b610369565b005b6101ae610512565b6040516101bb91906106a3565b60405180910390f35b6101cc610518565b6040516101d99190610648565b60405180910390f35b60085481565b60055481565b60045481565b60075481565b60025481565b61020861053e565b73ffffffffffffffffffffffffffffffffffffffff16610226610340565b73ffffffffffffffffffffffffffffffffffffffff161461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610683565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61037161053e565b73ffffffffffffffffffffffffffffffffffffffff1661038f610340565b73ffffffffffffffffffffffffffffffffffffffff16146103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc90610683565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c90610663565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000813590506105558161070b565b92915050565b60006020828403121561056d57600080fd5b600061057b84828501610546565b91505092915050565b61058d816106cf565b82525050565b60006105a06026836106be565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106066020836106be565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61064281610701565b82525050565b600060208201905061065d6000830184610584565b92915050565b6000602082019050818103600083015261067c81610593565b9050919050565b6000602082019050818103600083015261069c816105f9565b9050919050565b60006020820190506106b86000830184610639565b92915050565b600082825260208201905092915050565b60006106da826106e1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610714816106cf565b811461071f57600080fd5b5056fea26469706673582212200c31ac239153a0943822a834fa44a20b209f69649db1424c5471aab3ebdaeeef64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x964 CODESIZE SUB DUP1 PUSH2 0x964 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x11C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42 PUSH2 0xEA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x101 DUP2 PUSH2 0x1CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0x1E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x142 DUP9 DUP3 DUP10 ADD PUSH2 0xF2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x153 DUP9 DUP3 DUP10 ADD PUSH2 0x107 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x164 DUP9 DUP3 DUP10 ADD PUSH2 0x107 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x175 DUP9 DUP3 DUP10 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x186 DUP9 DUP3 DUP10 ADD PUSH2 0x107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E DUP3 PUSH2 0x1A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8 DUP2 PUSH2 0x193 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF DUP2 PUSH2 0x1C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x758 DUP1 PUSH2 0x20C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xFA1A5F59 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B0875A6 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x31711884 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3996DC8F EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x5CAED029 EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x55B JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x53E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x226 PUSH2 0x340 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x273 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x371 PUSH2 0x53E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38F PUSH2 0x340 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44C SWAP1 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x555 DUP2 PUSH2 0x70B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x57B DUP5 DUP3 DUP6 ADD PUSH2 0x546 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 PUSH1 0x26 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 PUSH1 0x20 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x642 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x67C DUP2 PUSH2 0x593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x69C DUP2 PUSH2 0x5F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x639 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA DUP3 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x714 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP2 EQ PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC BALANCE 0xAC 0x23 SWAP2 MSTORE8 LOG0 SWAP5 CODESIZE 0x22 0xA8 CALLVALUE STATICCALL DIFFICULTY LOG2 SIGNEXTEND KECCAK256 SWAP16 PUSH10 0x649DB1424C5471AAB3EB 0xDA 0xEE 0xEF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "5428:725:0:-:0;;;6012:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;981:17;1001:12;:10;;;:12;;:::i;:::-;981:32;;1033:9;1024:6;;:18;;;;;;;;;;;;;;;;;;1091:9;1058:43;;1087:1;1058:43;;;;;;;;;;;;955:154;6012:132;;;;;5428:725;;735:115;788:15;831:10;816:26;;735:115;:::o;7:143:1:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:910::-;;;;;;492:3;480:9;471:7;467:23;463:33;460:2;;;509:1;506;499:12;460:2;552:1;577:64;633:7;624:6;613:9;609:22;577:64;:::i;:::-;567:74;;523:128;690:2;716:64;772:7;763:6;752:9;748:22;716:64;:::i;:::-;706:74;;661:129;829:2;855:64;911:7;902:6;891:9;887:22;855:64;:::i;:::-;845:74;;800:129;968:2;994:64;1050:7;1041:6;1030:9;1026:22;994:64;:::i;:::-;984:74;;939:129;1107:3;1134:64;1190:7;1181:6;1170:9;1166:22;1134:64;:::i;:::-;1124:74;;1078:130;450:765;;;;;;;;:::o;1221:96::-;;1287:24;1305:5;1287:24;:::i;:::-;1276:35;;1266:51;;;:::o;1323:126::-;;1400:42;1393:5;1389:54;1378:65;;1368:81;;;:::o;1455:77::-;;1521:5;1510:16;;1500:32;;;:::o;1538:122::-;1611:24;1629:5;1611:24;:::i;:::-;1604:5;1601:35;1591:2;;1650:1;1647;1640:12;1591:2;1581:79;:::o;1666:122::-;1739:24;1757:5;1739:24;:::i;:::-;1732:5;1729:35;1719:2;;1778:1;1775;1768:12;1719:2;1709:79;:::o;5428:725:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3303:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "502:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "525:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "507:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:1",
														"type": ""
													}
												],
												"src": "420:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:224:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "700:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "766:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "795:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "800:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "804:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "784:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "860:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "865:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "856:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "870:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "849:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "889:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "900:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "896:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "678:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "686:3:1",
														"type": ""
													}
												],
												"src": "544:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1066:184:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1076:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1142:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1083:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1176:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1180:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1225:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1236:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1241:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1054:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1062:3:1",
														"type": ""
													}
												],
												"src": "920:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1361:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1343:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1343:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1309:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1316:3:1",
														"type": ""
													}
												],
												"src": "1256:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1478:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1488:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1500:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1511:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1496:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1496:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1488:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1568:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1581:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1592:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1577:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1524:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1524:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1450:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1462:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1473:4:1",
														"type": ""
													}
												],
												"src": "1380:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1789:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1801:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1812:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1789:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1847:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1855:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1861:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1851:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1825:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1881:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2015:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1889:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1881:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1759:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1774:4:1",
														"type": ""
													}
												],
												"src": "1608:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2204:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2214:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2226:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2237:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2222:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2214:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2272:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2257:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2280:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2286:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2250:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2250:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2306:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2440:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2314:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2314:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2184:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:1",
														"type": ""
													}
												],
												"src": "2033:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2556:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2566:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2578:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2589:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2574:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2574:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2566:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2646:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2659:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2670:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2655:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2655:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2602:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2602:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2602:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2528:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2540:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2551:4:1",
														"type": ""
													}
												],
												"src": "2458:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2782:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2799:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2804:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2792:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2820:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2839:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2844:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2820:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2754:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2759:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2770:11:1",
														"type": ""
													}
												],
												"src": "2686:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2906:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2916:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2945:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2927:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2916:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2888:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2898:7:1",
														"type": ""
													}
												],
												"src": "2861:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3008:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3018:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3033:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3040:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3018:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2990:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3000:7:1",
														"type": ""
													}
												],
												"src": "2963:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3140:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3150:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3161:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3150:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3122:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3132:7:1",
														"type": ""
													}
												],
												"src": "3095:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3221:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3278:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3290:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3280:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3244:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3269:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3251:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3251:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3241:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:43:1"
															},
															"nodeType": "YulIf",
															"src": "3231:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3214:5:1",
														"type": ""
													}
												],
												"src": "3178:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461014457806378e979251461014e5780638da5cb5b1461016c578063f2fde38b1461018a578063fa1a5f59146101a6578063fc0c546a146101c4576100a9565b80631b0875a6146100ae57806331711884146100cc5780633197cbb6146100ea5780633996dc8f146101085780635caed02914610126575b600080fd5b6100b66101e2565b6040516100c391906106a3565b60405180910390f35b6100d46101e8565b6040516100e191906106a3565b60405180910390f35b6100f26101ee565b6040516100ff91906106a3565b60405180910390f35b6101106101f4565b60405161011d91906106a3565b60405180910390f35b61012e6101fa565b60405161013b91906106a3565b60405180910390f35b61014c610200565b005b61015661033a565b60405161016391906106a3565b60405180910390f35b610174610340565b6040516101819190610648565b60405180910390f35b6101a4600480360381019061019f919061055b565b610369565b005b6101ae610512565b6040516101bb91906106a3565b60405180910390f35b6101cc610518565b6040516101d99190610648565b60405180910390f35b60085481565b60055481565b60045481565b60075481565b60025481565b61020861053e565b73ffffffffffffffffffffffffffffffffffffffff16610226610340565b73ffffffffffffffffffffffffffffffffffffffff161461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610683565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61037161053e565b73ffffffffffffffffffffffffffffffffffffffff1661038f610340565b73ffffffffffffffffffffffffffffffffffffffff16146103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc90610683565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c90610663565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000813590506105558161070b565b92915050565b60006020828403121561056d57600080fd5b600061057b84828501610546565b91505092915050565b61058d816106cf565b82525050565b60006105a06026836106be565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106066020836106be565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61064281610701565b82525050565b600060208201905061065d6000830184610584565b92915050565b6000602082019050818103600083015261067c81610593565b9050919050565b6000602082019050818103600083015261069c816105f9565b9050919050565b60006020820190506106b86000830184610639565b92915050565b600082825260208201905092915050565b60006106da826106e1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610714816106cf565b811461071f57600080fd5b5056fea26469706673582212200c31ac239153a0943822a834fa44a20b209f69649db1424c5471aab3ebdaeeef64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xFA1A5F59 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1C4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1B0875A6 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x31711884 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x3996DC8F EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x5CAED029 EQ PUSH2 0x126 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x55B JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x53E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x226 PUSH2 0x340 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x273 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x371 PUSH2 0x53E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38F PUSH2 0x340 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44C SWAP1 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x555 DUP2 PUSH2 0x70B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x57B DUP5 DUP3 DUP6 ADD PUSH2 0x546 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 PUSH1 0x26 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 PUSH1 0x20 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x642 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x67C DUP2 PUSH2 0x593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x69C DUP2 PUSH2 0x5F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x639 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DA DUP3 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x714 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP2 EQ PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC BALANCE 0xAC 0x23 SWAP2 MSTORE8 LOG0 SWAP5 CODESIZE 0x22 0xA8 CALLVALUE STATICCALL DIFFICULTY LOG2 SIGNEXTEND KECCAK256 SWAP16 PUSH10 0x649DB1424C5471AAB3EB 0xDA 0xEE 0xEF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "5428:725:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5928:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5697:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5666:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5846:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5516:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:148;;;:::i;:::-;;5581:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1188:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2131:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5771:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5459:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5928:32;;;;:::o;5697:24::-;;;;:::o;5666:22::-;;;;:::o;5846:25::-;;;;:::o;5516:27::-;;;;:::o;1831:148::-;1417:12;:10;:12::i;:::-;1406:23;;:7;:5;:7::i;:::-;:23;;;1398:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1938:1:::1;1901:40;;1922:6;::::0;::::1;;;;;;;;1901:40;;;;;;;;;;;;1969:1;1952:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1831:148::o:0;5581:24::-;;;;:::o;1188:87::-;1234:7;1261:6;;;;;;;;;;;1254:13;;1188:87;:::o;2131:244::-;1417:12;:10;:12::i;:::-;1406:23;;:7;:5;:7::i;:::-;:23;;;1398:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2240:1:::1;2220:22;;:8;:22;;;;2212:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2330:8;2301:38;;2322:6;::::0;::::1;;;;;;;;2301:38;;;;;;;;;;;;2359:8;2350:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2131:244:::0;:::o;5771:25::-;;;;:::o;5459:20::-;;;;;;;;;;;;;:::o;735:115::-;788:15;831:10;816:26;;735:115;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:370::-;;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;804:34;800:1;795:3;791:11;784:55;870:8;865:2;860:3;856:12;849:30;905:2;900:3;896:12;889:19;;690:224;;;:::o;920:330::-;;1083:67;1147:2;1142:3;1083:67;:::i;:::-;1076:74;;1180:34;1176:1;1171:3;1167:11;1160:55;1241:2;1236:3;1232:12;1225:19;;1066:184;;;:::o;1256:118::-;1343:24;1361:5;1343:24;:::i;:::-;1338:3;1331:37;1321:53;;:::o;1380:222::-;;1511:2;1500:9;1496:18;1488:26;;1524:71;1592:1;1581:9;1577:17;1568:6;1524:71;:::i;:::-;1478:124;;;;:::o;1608:419::-;;1812:2;1801:9;1797:18;1789:26;;1861:9;1855:4;1851:20;1847:1;1836:9;1832:17;1825:47;1889:131;2015:4;1889:131;:::i;:::-;1881:139;;1779:248;;;:::o;2033:419::-;;2237:2;2226:9;2222:18;2214:26;;2286:9;2280:4;2276:20;2272:1;2261:9;2257:17;2250:47;2314:131;2440:4;2314:131;:::i;:::-;2306:139;;2204:248;;;:::o;2458:222::-;;2589:2;2578:9;2574:18;2566:26;;2602:71;2670:1;2659:9;2655:17;2646:6;2602:71;:::i;:::-;2556:124;;;;:::o;2686:169::-;;2804:6;2799:3;2792:19;2844:4;2839:3;2835:14;2820:29;;2782:73;;;;:::o;2861:96::-;;2927:24;2945:5;2927:24;:::i;:::-;2916:35;;2906:51;;;:::o;2963:126::-;;3040:42;3033:5;3029:54;3018:65;;3008:81;;;:::o;3095:77::-;;3161:5;3150:16;;3140:32;;;:::o;3178:122::-;3251:24;3269:5;3251:24;:::i;:::-;3244:5;3241:35;3231:2;;3290:1;3287;3280:12;3231:2;3221:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "376000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"endTime()": "1174",
								"owner()": "1266",
								"renounceOwnership()": "24329",
								"soldAmount()": "1217",
								"startTime()": "1151",
								"token()": "1324",
								"tokenDecimal()": "1218",
								"tokenRate()": "1152",
								"totalRaise()": "1196",
								"totalRewardTokens()": "1130",
								"transferOwnership(address)": "24744"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5428,
									"end": 6153,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 981,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1001,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1001,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1001,
									"end": 1011,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1001,
									"end": 1011,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1001,
									"end": 1013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1001,
									"end": 1013,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1001,
									"end": 1013,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1001,
									"end": 1013,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1001,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1013,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 1013,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1033,
									"end": 1042,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1030,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1024,
									"end": 1030,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1024,
									"end": 1042,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1091,
									"end": 1100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1101,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1109,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6012,
									"end": 6144,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 735,
									"end": 850,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 735,
									"end": 850,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 788,
									"end": 803,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 831,
									"end": 841,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 816,
									"end": 842,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 816,
									"end": 842,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 735,
									"end": 850,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 735,
									"end": 850,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 1215,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 495,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 480,
									"end": 489,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 471,
									"end": 478,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 467,
									"end": 490,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 463,
									"end": 496,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 460,
									"end": 462,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 460,
									"end": 462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 460,
									"end": 462,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 509,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 507,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 499,
									"end": 511,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 460,
									"end": 462,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 460,
									"end": 462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 552,
									"end": 553,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 633,
									"end": 640,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 624,
									"end": 630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 613,
									"end": 622,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 609,
									"end": 631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 577,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 567,
									"end": 641,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 567,
									"end": 641,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 523,
									"end": 651,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 690,
									"end": 692,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 772,
									"end": 779,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 763,
									"end": 769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 752,
									"end": 761,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 748,
									"end": 770,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 716,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 716,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 706,
									"end": 780,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 706,
									"end": 780,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 661,
									"end": 790,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 829,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 911,
									"end": 918,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 902,
									"end": 908,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 891,
									"end": 900,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 887,
									"end": 909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 855,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 855,
									"end": 919,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 845,
									"end": 919,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 845,
									"end": 919,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 968,
									"end": 970,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1050,
									"end": 1057,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1041,
									"end": 1047,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1039,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1026,
									"end": 1048,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 994,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1058,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1058,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 939,
									"end": 1068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1110,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1190,
									"end": 1197,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1187,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1188,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1134,
									"end": 1198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1124,
									"end": 1198,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1124,
									"end": 1198,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1208,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 450,
									"end": 1215,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1221,
									"end": 1317,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1221,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1221,
									"end": 1317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1287,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1287,
									"end": 1311,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1287,
									"end": 1311,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1287,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1311,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1317,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1317,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1317,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1323,
									"end": 1449,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1323,
									"end": 1449,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1449,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1442,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1393,
									"end": 1398,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1443,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 1443,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 1443,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1449,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1449,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1455,
									"end": 1532,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1455,
									"end": 1532,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1532,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 1526,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1510,
									"end": 1526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1510,
									"end": 1526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1532,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1532,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1532,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1538,
									"end": 1660,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1538,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1611,
									"end": 1635,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1629,
									"end": 1634,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1611,
									"end": 1635,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1611,
									"end": 1635,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1611,
									"end": 1635,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1611,
									"end": 1635,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1604,
									"end": 1609,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1636,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1593,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1591,
									"end": 1593,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1651,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1647,
									"end": 1648,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1640,
									"end": 1652,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1593,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1591,
									"end": 1593,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1660,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1660,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1666,
									"end": 1788,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1757,
									"end": 1762,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1739,
									"end": 1763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1739,
									"end": 1763,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1739,
									"end": 1763,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1739,
									"end": 1763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1732,
									"end": 1737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1729,
									"end": 1764,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1719,
									"end": 1721,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1775,
									"end": 1776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1780,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1721,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1719,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1709,
									"end": 1788,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1709,
									"end": 1788,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5428,
									"end": 6153,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c31ac239153a0943822a834fa44a20b209f69649db1424c5471aab3ebdaeeef64736f6c63430008000033",
									".code": [
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "78E97925"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "FA1A5F59"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "1B0875A6"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "31711884"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "3197CBB6"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "3996DC8F"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "5CAED029"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 6153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5928,
											"end": 5960,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5697,
											"end": 5721,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5846,
											"end": 5871,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5543,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1979,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1275,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1398,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2212,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2330,
											"end": 2338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2339,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5479,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 735,
											"end": 850,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 735,
											"end": 850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 788,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 841,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 816,
											"end": 842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 816,
											"end": 842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 850,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 495,
											"end": 532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 914,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 544,
											"end": 914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 544,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 766,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 791,
											"end": 802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 870,
											"end": 878,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 860,
											"end": 863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 856,
											"end": 868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 905,
											"end": 907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 889,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 914,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 920,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1083,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1214,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1250,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1256,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1256,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1602,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1602,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1602,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1608,
											"end": 2027,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1608,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2015,
											"end": 2019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1889,
											"end": 2020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 2020,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1889,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2027,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2033,
											"end": 2452,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2033,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2314,
											"end": 2445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2314,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2314,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2458,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2458,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2602,
											"end": 2673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 2673,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2602,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2686,
											"end": 2855,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2686,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2861,
											"end": 2957,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2861,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2927,
											"end": 2951,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2927,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2927,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2957,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2963,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2963,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3033,
											"end": 3038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3083,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3095,
											"end": 3172,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3095,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3178,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3178,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3251,
											"end": 3275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3251,
											"end": 3275,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3251,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3276,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3231,
											"end": 3233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3233,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3231,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3300,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"endTime()": "3197cbb6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"soldAmount()": "fa1a5f59",
							"startTime()": "78e97925",
							"token()": "fc0c546a",
							"tokenDecimal()": "5caed029",
							"tokenRate()": "31711884",
							"totalRaise()": "3996dc8f",
							"totalRewardTokens()": "1b0875a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRewardTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDecimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IDO.sol\":\"IDO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IDO.sol\":{\"keccak256\":\"0xd9b9980c73de1c93be98c330bfe51ba43eda47be3e1ed56160731438d7d2db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7eb61a60133c30cc8403cff907f744968b56c7893c7c5486d5452076bde6095b\",\"dweb:/ipfs/QmYnai2Gx9uoVGKBBLpXfuZipxDzZNHVJk86FdaexBLKSS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "IDO.sol:IDO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 216,
								"contract": "IDO.sol:IDO",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 218,
								"contract": "IDO.sol:IDO",
								"label": "tokenDecimal",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 220,
								"contract": "IDO.sol:IDO",
								"label": "startTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 222,
								"contract": "IDO.sol:IDO",
								"label": "endTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 224,
								"contract": "IDO.sol:IDO",
								"label": "tokenRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 226,
								"contract": "IDO.sol:IDO",
								"label": "soldAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 228,
								"contract": "IDO.sol:IDO",
								"label": "totalRaise",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 230,
								"contract": "IDO.sol:IDO",
								"label": "totalRewardTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IDO.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IDO.sol\":{\"keccak256\":\"0xd9b9980c73de1c93be98c330bfe51ba43eda47be3e1ed56160731438d7d2db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7eb61a60133c30cc8403cff907f744968b56c7893c7c5486d5452076bde6095b\",\"dweb:/ipfs/QmYnai2Gx9uoVGKBBLpXfuZipxDzZNHVJk86FdaexBLKSS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where  there is an account (an owner) that can be granted exclusive access to  specific functions.  By default, the owner account will be the one that deploys the contract. This  can later be changed with {transferOwnership}.  This module is used through inheritance. It will make available the modifier  `onlyOwner`, which can be applied to your functions to restrict their use to  the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where  there is an account (an owner) that can be granted exclusive access to  specific functions.  By default, the owner account will be the one that deploys the contract. This  can later be changed with {transferOwnership}.  This module is used through inheritance. It will make available the modifier  `onlyOwner`, which can be applied to your functions to restrict their use to  the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IDO.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IDO.sol\":{\"keccak256\":\"0xd9b9980c73de1c93be98c330bfe51ba43eda47be3e1ed56160731438d7d2db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7eb61a60133c30cc8403cff907f744968b56c7893c7c5486d5452076bde6095b\",\"dweb:/ipfs/QmYnai2Gx9uoVGKBBLpXfuZipxDzZNHVJk86FdaexBLKSS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "IDO.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"IDO.sol": {
				"ast": {
					"absolutePath": "IDO.sol",
					"exportedSymbols": {
						"IDO": [
							245
						],
						"IERC20": [
							212
						],
						"Ownable": [
							118
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:513:0",
								"text": "  @dev Contract module which provides a basic access control mechanism, where\n  there is an account (an owner) that can be granted exclusive access to\n  specific functions.\n  By default, the owner account will be the one that deploys the contract. This\n  can later be changed with {transferOwnership}.\n  This module is used through inheritance. It will make available the modifier\n  `onlyOwner`, which can be applied to your functions to restrict their use to\n  the owner."
							},
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "612:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "612:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 10,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "670:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "701:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:57:0"
									},
									"src": "643:84:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "805:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 17,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "831:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "831:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "823:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 15,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "823:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 14,
												"id": 20,
												"nodeType": "Return",
												"src": "816:26:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "788:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:17:0"
									},
									"scope": 118,
									"src": "735:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "970:139:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "981:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 26,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 30,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 28,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1001:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1001:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "981:32:0"
											},
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 31,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1024:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 32,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1033:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1024:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "1024:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1087:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1079:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 36,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1079:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1079:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 40,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1091:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 35,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1058:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1058:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "EmitStatement",
												"src": "1053:48:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "858:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "970:0:0"
									},
									"scope": 118,
									"src": "955:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1243:32:0",
										"statements": [
											{
												"expression": {
													"id": 50,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "1261:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 49,
												"id": 51,
												"nodeType": "Return",
												"src": "1254:13:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1117:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1234:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:9:0"
									},
									"scope": 118,
									"src": "1188:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1387:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 57,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1406:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1406:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1417:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1417:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1406:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1431:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1398:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1398:68:0"
											},
											{
												"id": 65,
												"nodeType": "PlaceholderStatement",
												"src": "1477:1:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1283:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 67,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:2:0"
									},
									"src": "1366:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1885:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 74,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1922:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1938:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1930:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1930:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1930:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 73,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1901:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "EmitStatement",
												"src": "1896:45:0"
											},
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 81,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1952:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1969:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 82,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1961:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1961:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1952:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1952:19:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1494:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 71,
											"modifierName": {
												"id": 70,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 118,
									"src": "1831:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2201:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "2220:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2240:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2232:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 99,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2232:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2232:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2220:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2244:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2212:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2212:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 108,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "2322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 109,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2330:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 107,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2301:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2301:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "EmitStatement",
												"src": "2296:43:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 112,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "2350:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 113,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2359:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2350:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2350:17:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "1987:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 95,
											"modifierName": {
												"id": 94,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "2191:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2191:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2158:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:0"
									},
									"scope": 118,
									"src": "2131:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 246,
							"src": "579:1799:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "2382:73:0",
								"text": "  @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2481:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2554:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2580:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 122,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2580:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2579:15:0"
									},
									"scope": 212,
									"src": "2541:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2603:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:2:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2706:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:15:0"
									},
									"scope": 212,
									"src": "2665:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2729:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2817:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2843:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 134,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:7:0"
									},
									"scope": 212,
									"src": "2800:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "2858:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2950:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "2976:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:9:0"
									},
									"scope": 212,
									"src": "2930:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "2993:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3090:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:17:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3130:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:9:0"
									},
									"scope": 212,
									"src": "3071:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "3147:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3380:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3399:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3379:35:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3433:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3432:6:0"
									},
									"scope": 212,
									"src": "3362:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3447:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3736:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3751:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3735:32:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3791:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:0"
									},
									"scope": 212,
									"src": "3717:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3808:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:33:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4524:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4524:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4523:6:0"
									},
									"scope": 212,
									"src": "4456:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4538:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4862:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4878:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4897:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4861:51:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4930:6:0"
									},
									"scope": 212,
									"src": "4840:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "4945:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 202,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5124:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5146:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5166:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:57:0"
									},
									"src": "5109:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5189:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 211,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "5358:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "5381:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "5406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5357:63:0"
									},
									"src": "5343:78:0"
								}
							],
							"scope": 246,
							"src": "2457:2967:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 213,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 118,
										"src": "5444:7:0"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "5444:7:0"
								}
							],
							"contractDependencies": [
								118
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 245,
							"linearizedBaseContracts": [
								245,
								118
							],
							"name": "IDO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 216,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5459:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 215,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5459:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5caed029",
									"id": 218,
									"mutability": "mutable",
									"name": "tokenDecimal",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5516:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5516:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 220,
									"mutability": "mutable",
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5581:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5581:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 222,
									"mutability": "mutable",
									"name": "endTime",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5666:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5666:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "31711884",
									"id": 224,
									"mutability": "mutable",
									"name": "tokenRate",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5697:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 223,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5697:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fa1a5f59",
									"id": 226,
									"mutability": "mutable",
									"name": "soldAmount",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5771:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 225,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5771:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3996dc8f",
									"id": 228,
									"mutability": "mutable",
									"name": "totalRaise",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5846:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5846:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b0875a6",
									"id": 230,
									"mutability": "mutable",
									"name": "totalRewardTokens",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5928:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 229,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5928:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6126:18:0",
										"statements": []
									},
									"id": 244,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6025:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_startTime",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6041:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_endTime",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6061:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_tokenRate",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6079:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "_totalRewardTokens",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6099:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:102:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6126:0:0"
									},
									"scope": 245,
									"src": "6012:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 246,
							"src": "5428:725:0"
						}
					],
					"src": "35:6118:0"
				},
				"id": 0
			}
		}
	}
}